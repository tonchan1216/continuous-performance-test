AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Cluster

Parameters:
  Prefix:
    Description: Prefix Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: continuous-perftest
  VPCId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
    Default: vpc
  ECSAMI:
    Description: AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id
  Keypair:
    Description: Keypair Name
    Type: String
    MinLength: 1
    MaxLength: 255
    Default: test

Resources:
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Prefix}-EC2ContainerServiceRole
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref ECSRole

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${Prefix}-cluster
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-cluster

  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName : !Sub ${Prefix}-ecs-cluster-asg
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${Prefix}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${Prefix}-PrivateSubnet2
        - Fn::ImportValue: !Sub ${Prefix}-PrivateSubnet3
      LaunchConfigurationName: !Ref ECSLaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-cluster
          PropagateAtLaunch: true
        - Key: Owner
          Value: !Sub ${Prefix}
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  SecurityGroupEcsCluster:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Prefix}-SecurityGroupEcsCluster
      GroupDescription: SecurityGroupEcsCluster
      VpcId: !Ref VPCId
      Tags:
        - Key : Name
          Value: !Sub ${Prefix}-SecurityGroupEcsCluster

  ECSLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName : !Sub ${Prefix}-ECSLaunchConfiguration
      ImageId: !Ref ECSAMI
      InstanceType: t3.medium
      IamInstanceProfile: !Ref IamInstanceProfile
      KeyName: !Ref Keypair
      SecurityGroups:
        - !Ref  SecurityGroupEcsCluster
      AssociatePublicIpAddress: false
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}

Outputs:
  ECSCluster:
    Description: ECS Cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub ${Prefix}-EcsCluster
  ECSClusterSecurotyGroup:
    Description: Security Group of ECS Cluster
    Value: !Ref SecurityGroupEcsCluster
    Export:
      Name: !Sub ${Prefix}-EcsClusterSg