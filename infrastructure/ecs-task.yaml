AWSTemplateFormatVersion: '2010-09-09'

Description: Sample CloudFormation template with YAML - ECS Task Definition Depends on sample-vpc-cfn.yml, sample-sg-cfn.yml, sample-ecs-cluster-cfn.yml

Parameters:
  VPCName:
    Description: Target VPC Stack Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: mynavi-sample-cloudformation-vpc
  EnvType:
    Description: Which environments to deploy your service.
    Type: String
    AllowedValues: ["Dev", "Staging", "Production"]
    Default: Dev

Mappings:
  BackendServiceTaskDefinitionMap:
    "Memory" : 1024
    "Cpu" : 512
    "ContainerName" : "mynavi-sample-cloudformation-ecs-backend-service"
    "ContainerImage" : "debugroom/mynavi-sample-cloudformation-ecs-backend-service:1.0-RELEASE"
    "ContainerPort" : 8080
    "HostPort" : 0
    "ContainerMemory" : 1024
    "Profile" : "production"

Resources:
  BackendECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  BackendServiceECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub sample-ecstask-backend-service-${EnvType}
      RequiresCompatibilities:
        - EC2
      Memory: !FindInMap [BackendServiceTaskDefinitionMap, Memory]
      Cpu: !FindInMap [BackendServiceTaskDefinitionMap, Cpu]
      NetworkMode: bridge
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      TaskRoleArn: !GetAtt BackendECSTaskRole.Arn
      ContainerDefinitions:
        - Name: !FindInMap [BackendServiceTaskDefinitionMap, ContainerName]
          Image: !FindInMap [BackendServiceTaskDefinitionMap, ContainerImage]
          PortMappings:
            - ContainerPort: !FindInMap [BackendServiceTaskDefinitionMap, ContainerPort]
              HostPort: !FindInMap [BackendServiceTaskDefinitionMap, HostPort]
          Memory: !FindInMap [BackendServiceTaskDefinitionMap, ContainerMemory]
          Environment:
            - Name: ENV_TYPE
              Value: !FindInMap [BackendServiceTaskDefinitionMap, Profile]

Outputs:
  BackendECSTaskDefinition:
    Description: Backend ECS Task Definition
    Value: !Ref BackendServiceECSTaskDefinition
    Export:
      Name: !Sub ${VPCName}-BackendEcsTaskDefinition-${EnvType}

  BackendECSTaskRole:
    Description: Backend ECS Task has role
    Value: !Ref BackendECSTaskRole
    Export:
      Name: !Sub ${VPCName}-BackendEcsTaskRole-${EnvType}