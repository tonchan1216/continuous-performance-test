AWSTemplateFormatVersion: "2010-09-09"
Description: Sample CloudFormation template with YAML - VPC

Parameters:
  Prefix:
    Description: Prefix Name
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: ^[a-zA-Z][-a-zA-Z0-9]*$
    Default: continuous-perftest
  VPCCiderBlock:
    Description: CiderBlock paramater for VPC
    Type: String
    MinLength: 9
    MaxLength: 18
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.2.25.0/24
  VPCId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
    Default: vpc
  IGWId:
    Description: Internet Gateway ID
    Type: String
    Default: igw-06fda598abc1e4a21

Resources:
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [0, !Cidr [!Ref VPCCiderBlock, 6, 5]]
      VpcId: !Ref VPCId
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [1, !Cidr [!Ref VPCCiderBlock, 6, 5]]
      VpcId: !Ref VPCId
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [2, !Cidr [!Ref VPCCiderBlock, 6, 5]]
      VpcId: !Ref VPCId
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [3, !Cidr [!Ref VPCCiderBlock, 6, 5]]
      VpcId: !Ref VPCId
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PrivateSubnet2

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Select [4, !Cidr [!Ref VPCCiderBlock, 6, 5]]
      VpcId: !Ref VPCId
      AvailabilityZone: !Select [2, !GetAZs ""]
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PrivateSubnet3

  # IGW:
  #   Type: AWS::EC2::InternetGateway
  #   Properties:
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${Prefix}-igw

  # IGWAttach:
  #   Type: AWS::EC2::VPCGatewayAttachment
  #   Properties:
  #     InternetGatewayId: !Ref IGW
  #     VpcId: !Ref VPCId

  CustomRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PublicRoute

  CustomRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref CustomRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGWId

  PublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref CustomRouteTable

  PublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref CustomRouteTable

  NatGWEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: !Ref VPCId

  NatGW:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGWEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-NatGW

  MainRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-PrivateRoute

  MainRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MainRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW

  PrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref MainRouteTable

  PrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref MainRouteTable

  PrivateSubnet3Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref MainRouteTable

Outputs:
  PublicSubnet1:
    Description: PublicSubnet1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Prefix}-PublicSubnet1

  PublicSubnet1Arn:
    Description: PublicSubnet1Arn
    Value: !Sub
      - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PublicSubnet1}
      - PublicSubnet1: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Prefix}-PublicSubnet1Arn

  PublicSubnet2:
    Description: PublicSubnet2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Prefix}-PublicSubnet2

  PublicSubnet2Arn:
    Description: PublicSubnet2Arn
    Value: !Sub
      - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PublicSubnet2}
      - PublicSubnet2: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Prefix}-PublicSubnet2Arn

  PrivateSubnet1:
    Description: PrivateSubnet1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet1

  PrivateSubnet1Arn:
    Description: PrivateSubnet1Arn
    Value: !Sub
      - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet1}
      - PrivateSubnet1: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet1Arn

  PrivateSubnet2:
    Description: PrivateSubnet2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet2

  PrivateSubnet2Arn:
    Description: PrivateSubnet2Arn
    Value: !Sub
      - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet2}
      - PrivateSubnet2: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet2Arn

  PrivateSubnet3:
    Description: PrivateSubnet3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet3

  PrivateSubnet3Arn:
    Description: PrivateSubnet3Arn
    Value: !Sub
      - arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet3}
      - PrivateSubnet2: !Ref PrivateSubnet3
    Export:
      Name: !Sub ${Prefix}-PrivateSubnet3Arn